<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2024-01-19T13:47:23+00:00</updated><id>/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">ROS-Industrial is buzzing</title><link href="/2021/12/08/ros-industrial-is-buzzing.html" rel="alternate" type="text/html" title="ROS-Industrial is buzzing" /><published>2021-12-08T08:15:12+00:00</published><updated>2021-12-08T08:15:12+00:00</updated><id>/2021/12/08/ros-industrial-is-buzzing</id><content type="html" xml:base="/2021/12/08/ros-industrial-is-buzzing.html">&lt;p&gt;&lt;strong&gt;This year’s ROS-Industrial Conference took place on December 01-02, 2021 as a virtual event. With more than 300 registrants it was the largest conference of the so far 9 conferences that have been organized since 2012. In this article, we try to capture the major developments around the ROS-Industrial initiative presented during the conference.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At the conference &lt;strong&gt;Drag &amp;amp; Bot&lt;/strong&gt; explained how their system for easy robot programming is being used by industry and showed a number of example applications. Their software is based on ROS and enables programming different industrial robots using a simple drag and drop interface. Drag &amp;amp; Bot also offers an interface for integrating external ROS programs and can be used by developers to deploy their ROS based solutions to industry.&lt;/p&gt;

&lt;p&gt;Another company that has today more than 450 mobile robots running their ROS based navigation is &lt;strong&gt;Node Robotics&lt;/strong&gt;. Robots running Node Robotics software are deployed in BMW’s production facilities and in other companies. Node Robotics software offers easy integration of mobile robots of different types into one fleet.  The ROS-based software system enables operating a single AMR, data sharing between AMRs as well as building custom fleet management systems. The companies first deployment of freely navigating AMRs was in 2016 in a plant of the automobile producer Audi.&lt;/p&gt;

&lt;p&gt;The ROS-Industrial ecosystem is producing a number of cutting edge solutions integrating ROS with industry. &lt;strong&gt;Pilz&lt;/strong&gt; is providing a portfolio of safety components that can be used to build a safety system around ROS based mobile robots. The center of the portfolio is the laser scanner PSENscan that can monitor configurable safety zones for the robot. The PSENscan also offers functionalities for integrating speed monitoring and it integrates with ROS via an open source driver.&lt;/p&gt;

&lt;p&gt;Progress has also been made with regards to real-time execution in ROS2 systems. Andrei Kholodnyi (&lt;strong&gt;Wind River&lt;/strong&gt;), co-lead of the ROS2 real-time working group, presented the groups work. Members of the working group have developed a number of new real-time optimized ROS2 executors. Another available component provided by the working group is a Raspberry PI4 based real-time benchmarking system with RT_PREEMPT kernel for Ubuntu 20.04.  ROS2 developers that are not satisfied with the real-time performance of RT patched Linux can also choose to switch to Wind River’s vxWorks or Blackberry’s QNX, both systems executing ROS2 applications.&lt;/p&gt;

&lt;p&gt;As previously mentioned, Drag &amp;amp; Bot’s software offers one way to integrate ROS into an industrial robotics platform but more solutions are becoming available. Another approach was presented by &lt;strong&gt;Universal Robots (UR)&lt;/strong&gt; and &lt;strong&gt;Forschungszentrum Informatik (FZI)&lt;/strong&gt; who have been collaborating to develop an advanced ROS interface for UR’s robots. The work enables direct integration of externally running ROS-based applications into URScript programs running on the robot. During the conference they showed a new interface that enable cartesian control and speed scaling for industrial robots from within ROS.  UR also showed a prototype of a URCap that enables integration with ROS at the conference. The goal of the development is to leverage ROS’ capabilities for UR’s robots and making them available via URCaps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Canonical&lt;/strong&gt; the publisher of Ubuntu also presented their solutions for deploying robot software. Their solution mainly consists of snap and Ubuntu Core.  Snap is a solution to create containerized and easily deployable software applications. Canonical claims that snaps have advantages for embedded systems, compared to other solutions such as docker, because they are more easily integrated with embedded hardware. Ubuntu Core is a minimal operating system including application packages which is based on snap containers which enables a modular and simple architecture for embedded systems. The Canonical software solutions are optimized for ROS and they are already used in industry e.g. in Bosch Rexroth’s CtrlX. Snaps are becoming another way of integrating ROS in industrial control systems and software platforms of the future.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ericsson&lt;/strong&gt; and &lt;strong&gt;eProsima&lt;/strong&gt; presented their work of integrating ROS2 with 5G systems and thus moving ROS2 towards enabling distributed real-time systems. The two organizations collaborated on developing an interface for ROS2 and the underlying DDS middleware implementations to enable creating unique IP flows for specified ROS2 communications and setting 5G quality of service parameters for these IP flows. The interface has been integrated in eProsima’s FastDDS. FastDDS is also the default middleware for the next longterm release ROS2 Humble (May 2022) which means integration of ROS2 with 5G quality of service is becoming simple.&lt;/p&gt;

&lt;p&gt;Another interesting development was presented by &lt;strong&gt;Xilinx&lt;/strong&gt;. Xilinx and AMD are working on providing prime hardware acceleration support for ROS2. The development of hardware acceleration interfaces is driven by the ROS2 hardware acceleration working group. Xilinx is developing the Kria Robotics Stack based on the open interfaces defined by the working group. Major features of the development are easy integration of embedded targets into the ROS2 build system and tools and an API for defining which parts of the ROS2 computation graph is run on CPU or e.g. FPGA. This development promises to make ROS2 a prime platform for deterministic and lightning fast computations that are needed for future robotics applications. Other companies such as NVIDIA are also targeting ROS2 for their hardware acceleration solutions as Katherine Scott (Open Robotics) stated in her presentation.&lt;/p&gt;

&lt;p&gt;Manufacturing systems are becoming a target for cyber criminals. As robots are deployed in all kind of systems that are essential for a countries economy they can even become a prime target in potential cyberwar scenarios. The ROS-Industrial community is aware of the arising problems and members &lt;strong&gt;Alias Robotics, Trend Micro&lt;/strong&gt; as well as &lt;strong&gt;Canonical&lt;/strong&gt; have presented research findings, solutions and services for ROS developers. Alias Robotics provides solutions such as the Robot Immune System (end point protection) as well as services for identifying potential risks in robotic products such as Threat Modeling. Alias Robotics and Trend Micro have together analyzed the DDS standard which is ROS2’s prime middleware and used in a wide range of applications such as medical, automotive and space. A number of security issues where discovered and reported. Canonical provides longterm support for end of life ROS distributions with security updates and the previously described deployment toolchain based on Ubuntu Core and snap which simplifies security updates during production.&lt;/p&gt;

&lt;p&gt;Advanced manipulation has always been a strong suit of the ROS ecosystem. This year’s conference made abundantly clear that this is also true for ROS2.  &lt;strong&gt;PickNik&lt;/strong&gt; main driver behind moveit2 gave an overview of new features currently being developed, notably mobile manipulation and hybrid planning.  A mobile manipulation demonstration for moveit2 was developed together with HelloRobot (&lt;a href=&quot;https://moveit.ros.org/events/rosworld-2021-workshop/&quot;&gt;workshop&lt;/a&gt;). A demonstrator for hybrid planning which integrates a global planner and local planner is being developed together with Fraunhofer IPA and targeting multi-layer welding. The goal is to perform scanning, welding and local planning at the same time to achieve higher process quality. Another talk focusing on robotic welding was contributed by  &lt;strong&gt;IRT Jules Vernes&lt;/strong&gt; that presented how they leveraged ROS for building a lightweight welding robot for mobile welding applications from scratch. They were able to design hardware and controller within a year and create a working prototype.  &lt;strong&gt;SwRI&lt;/strong&gt; has developed a ROS2 demonstrator for Scan &amp;amp; Plan applications (workshop).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ARTC&lt;/strong&gt; is developing software tools for collision avoidance in dynamic environments. Currently, obstacle avoidance during motion is not easily available for robot arms in ROS2. Therefore, ARTC has developed a dynamic safety joint trajectory controller, that integrates with motion planning solutions such as moveit2 and tesseract. The controller includes collision checking, speed scaling and re-planning. Average execution frequencies of more than 200 Hz are possible on commercial-off-the-shelf hardware.&lt;/p&gt;

&lt;p&gt;Software for modern robot systems is becoming more and more complex. Development and testing is becoming more and more difficult. It is time to work on handling the rising complexity of robotics development. &lt;strong&gt;Fraunhofer IPA&lt;/strong&gt; presented their work on a model-driven development toolchain for ROS-based systems. The toolchain enables extracting models from available handwritten ROS components, defining ROS systems of existing and new components using a graphical tool and deploying the defined systems in different fashions i.e. ROS package or a complete docker container. The toolchain is currently in alpha state and heavily worked on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SpaceROS and other news&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The space industry in the US is on the rise and with it is the interest in robotics solutions for space. ROS is already deployed in a number of non-critical space applications. &lt;strong&gt;Open Robotics and PickNik&lt;/strong&gt; are plotting the next big step for ROS - &lt;strong&gt;SpaceROS&lt;/strong&gt; - qualifying ROS and moveit for mission critical space applications.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TurtleBot4 is coming in 2022 with a base from IRobot&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This year’s conference showed that ROS is being commercially deployed in industry and we are seeing that industrial robotics platform providers (UR, Drag &amp;amp; Bot) are opening their platforms for ROS. Additionally, a number of supplier companies are providing key technologies for building safety systems around ROS-based robot applications. Furthermore, ROS2 has many configuration options for achieving real-time performance and industrial operating system developers such as Blackberry and Wind River are supporting ROS2. ROS2 is becoming a prime robotics platform for new technologies such as 5G and hardware acceleration thus enabling the robot applications of the future. ROS2’s security is moving in the focus of and being monitored by the security research community and a number of specialized security solution providers are available. With ROS2’s cutting edge motion planning capabilities this means building industrial robotics applications with ROS2 and deploying them to industry is becoming much easier.&lt;/p&gt;</content><author><name>ROS-Industrial Europe</name></author><summary type="html">This year’s ROS-Industrial Conference took place on December 01-02, 2021 as a virtual event. With more than 300 registrants it was the largest conference of the so far 9 conferences that have been organized since 2012. In this article, we try to capture the major developments around the ROS-Industrial initiative presented during the conference.</summary></entry><entry><title type="html">Introducing the ConnTact Assembly Framework</title><link href="/2021/10/19/introducing-the-ConnTact-Assembly-Framework.html" rel="alternate" type="text/html" title="Introducing the ConnTact Assembly Framework" /><published>2021-10-19T08:15:12+00:00</published><updated>2021-10-19T08:15:12+00:00</updated><id>/2021/10/19/introducing-the-ConnTact-Assembly-Framework</id><content type="html" xml:base="/2021/10/19/introducing-the-ConnTact-Assembly-Framework.html">&lt;h2 id=&quot;the-challenge-of-assembly&quot;&gt;The Challenge of Assembly&lt;/h2&gt;

&lt;p&gt;When assembling precision-tolerance parts, humans have an ideal set of capabilities. Combining geometrical understanding, visual guidance, tactile confirmation, and compliant force/torque (F/T) control, it is possible for a human to quickly assemble components despite micrometer tolerances. We take this remarkable suite of abilities for granted. To prove it, just recall that the number-one cliché child’s toy is all about fitting blocks through matching holes in a box. Our babies can do assembly tasks with ease.&lt;/p&gt;

&lt;p&gt;Now, the moment you consider handing the child’s block off to a modern industrial robot, you start to encounter some of a robot’s greatest disadvantages. A robot is, by design, a highly rigid precision machine. The robot must be fed very precise information about the orientation and position of the goal - the box in this case - and it cannot correct mid-action to comply as nearly-aligned pieces try to slide into place. If provided erroneous measurements - even ones that are just a few millimeters off - it will quite simply crush the box, the block, and possibly itself. Rigidity is inherently a difficult obstacle to performing mechanical assembly when high-accuracy measurement and fixturing are impractical.&lt;/p&gt;

&lt;h2 id=&quot;compliant-control&quot;&gt;Compliant Control&lt;/h2&gt;

&lt;p&gt;Despite these difficulties, a respected method has been developed for robots to imitate human flexibility and responsiveness, called compliant feedback control. By rapidly controlling the motion of the robot in response to 6DOF F/T information, a robot can imitate the soft compliant behavior of a human grip. This can be achieved with any modern robot using an after-market 6-axis load cell mounted between the tool flange and the gripper.&lt;/p&gt;

&lt;p&gt;This feedback enables detection of F/T “wrenches” acting on the gripper, so the control system can smoothly move to comply. Pressing on the front of the gripper makes the robot retract. Twisting the gripper makes the robot turn. The robot very convincingly pretends to be much less rigid. When displaced, it applies a constant gentle force toward its desired goal position and patiently waits until permitted to reach it.&lt;/p&gt;

&lt;p&gt;This permits the use of tactile methods of operation - the use of touch to sense the environment and make decisions. The system can correlate data about reaction forces, robot position, and robot velocity to detect the collision mode which best describes the interaction of the robot and the environment. For instance, collision with a flat surface may be identified by sharp resistance in one direction but negligible friction in other directions. The alignment of a cylindrical peg with a receptacle may be detected by resistance in all directions except one, the vector parallel with the receptacle axis. By characterizing these interactions, a reliable understanding of the contact state between the robot and workpiece can be formed.&lt;/p&gt;

&lt;p&gt;Researchers have been experimenting with and implementing compliant assembly systems for years. The Kuka iiwa comes pre-installed with certain compliant features built in. Other companies such as Franka Emika have designed robots specifically to achieve high performance in feedback-based assembly. And on the software side, open-source libraries exist which can control hardware through high-level position or velocity interfaces. In particular, our work makes extensive use of the cartesian_controllers libraries, developed at the FZI Research Center for Information Technology.&lt;/p&gt;

&lt;h2 id=&quot;the-conntact-framework&quot;&gt;The ConnTact Framework&lt;/h2&gt;

&lt;p&gt;NIST hopes to expand the realm of assembly research to smaller developers with less abundant resources and permit a much more agile workflow. To that end, NIST is collaborating with SwRI to develop an open-source framework for compliant assembly tasks, called ConnTact. This framework is meant to provide tools which create a bridge directly from hardware configuration to the real algorithmic development required to accomplish difficult tasks. It also standardizes interfaces to permit the community to share solutions and re-implement them with new hardware for new applications. The framework takes in information about the robot and task location and provides an environment where the user can easily develop tactile algorithms. The overall goal is to significantly ease the load on an end-user who wants to develop a new assembly applications anywhere on the spectrum from straighforward repeatable tasks to complex problems that leverage AI and reinforcement learning methods.&lt;/p&gt;

&lt;p&gt;The key to this framework is the simplification of interfaces. This permits any robot with force sensing and compliance control features to be used with any algorithm. To configure for a given robot, a developer must feed live force, torque, and position data into the Assembly Tools package. In addition, for each task, the task frame, or approximate location and rotation of the task relative to the robot, must be imported. With this basic input, the package provides a development framework with 3 major features: Generalization, Visualization, and Modularity.&lt;/p&gt;

&lt;h2 id=&quot;main-features&quot;&gt;Main Features&lt;/h2&gt;

&lt;p&gt;Generalization: The framework seeks to generalize algorithms to any location or task. This is accomplished by transforming all inputs - robot pose, force, and torque inputs - into task space, that is, it converts all spatial measurements to be relative to the task frame. For example, in the case of an Ethernet connector insertion task, given the location of the Ethernet socket relative to the robot, the development environment would provide position data to the algorithm relative to the socket. A command to move the plug to position (x,y,z) = (0,0,0.05) would place the Ethernet plug 5cm from the socket. A force of (0,0,10) always indicates that the gripper is experiencing a force away from the socket and parallel to its axis, even if the socket were upside-down on the underside of a workpiece. This allows the user to focus their efforts on algorithm development with the confidence that their work is applicable to any task location or orientation.&lt;/p&gt;

&lt;p&gt;Visualization: The framework provides visualization options using Python plotting libraries familiar to any modern programmer. Input position and forces are mathematically processed to provide reliable speed, force, torque, and position data streams which are easily displayed at runtime. This built-in visualization is meant to equip every program with a greater degree of transparency.&lt;/p&gt;

&lt;p&gt;Modularity: Finally, we facilitate modular algorithm development with a state machine-based control loop. The example implementation specifies a finite number of states and provides the conditions needed to transition between them. The user can reuse existing algorithmic motion routines from the open-source repository to rapidly produce useful programs. They can also develop their own algorithm modules and easily add them to existing program structures.&lt;/p&gt;

&lt;h2 id=&quot;some-sample-algorithm-modules-currently-included&quot;&gt;Some sample algorithm modules currently included:&lt;/h2&gt;

&lt;p&gt;Moving in a linear direction until a flat surface is detected.
Searching in a spiral pattern across a surface for a low spot, such as a connector falling a short way into its socket.
Moving compliantly in a specified direction until colliding with a rigid obstacle.
Probing in different directions to determine rigid constraint locations.&lt;/p&gt;

&lt;h2 id=&quot;code-release&quot;&gt;Code Release&lt;/h2&gt;

&lt;p&gt;The basic WIP framework is being made available publicly now at https://github.com/swri-robotics/ConnTact, and work will proceed over the coming months to add features and documentation. NIST and SwRI welcome any feedback to improve the framework. We aim to make a simple, straightforward, and powerful system to bring agile compliant robotic assembly to a wider developer community and bring tactile robot sensing to the forefront.&lt;/p&gt;</content><author><name>ROS-Industrial Americas</name></author><summary type="html">The Challenge of Assembly</summary></entry></feed>